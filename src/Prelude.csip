
import Builtins


appendStr = AppendStr

eqStr = EqStr

(==) : Nat -> Nat -> Bool
  = EqNat

(+) : Nat -> Nat -> Nat
  = AddNat

(*) : Nat -> Nat -> Nat
  = MulNat

even : Nat -> Bool
  = \n -> ModNat n 2 == 0
odd  : Nat -> Bool
  = \n -> ModNat n 2 == 1

div = DivNat


the : (a : Type) -> a -> a
  = \_ x -> x


Unit : Type
TT   : Unit

Tuple2 : Type -> Type -> Type
MkTuple2 : {a b} -> a -> b -> Tuple2 a b

Tuple3 : Type -> Type -> Type -> Type
MkTuple3 : {a b c} -> a -> b -> c -> Tuple3 a b c


"end of Prelude"
