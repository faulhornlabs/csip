
Ap : {a b} -> (a ~> b) -> a -> b

Bool : Type
True  : Bool
False : Bool

Nat       : Type
Succ      : Nat -> Nat
AddNat    : Nat -> Nat -> Nat
MulNat    : Nat -> Nat -> Nat
ModNat    : Nat -> Nat -> Nat
DivNat    : Nat -> Nat -> Nat
EqNat     : Nat -> Nat -> Bool

String    : Type
Cons      : String -> String -> String
AppendStr : String -> String -> String
EqStr     : String -> String -> Bool

Ty        : Type
Arr       : Ty -> Ty -> Ty
Prod      : Ty -> Ty -> Ty

Code      : Ty -> Type
Lam       : {a b : Ty} -> (a -> b) -> Arr a b
App       : {a b} -> Arr a b -> a -> b
Let       : {a b : Ty} -> a -> (a -> b) -> b
TopLet    : {a b : Ty} -> a -> a -> b -> b
Pair      : {a b : Ty} -> a -> b -> Prod a b
Fst       : {a b} -> Prod a b -> a
Snd       : {a b} -> Prod a b -> b

lookupDict : (a : Type) -> a

SuperClassList : (a : Type) -> Type
SuperClassNil  : {a} -> SuperClassList a
SuperClassCons : {a b} -> (a -> b) -> SuperClassList a -> SuperClassList a

superClasses : (a : Type) -> SuperClassList a

"end of Builtins"
