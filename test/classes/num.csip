# elab
# eval

import Builtins

addN : Nat -> Nat -> Nat
addN 0 n = n
addN (Succ n) m = Succ (addN n m)

Num : Type -> Type
MkNum : {a : Type} -> (a -> a -> a) -> Num a

lookupDict (Num Nat) = MkNum addN


add : {a} -> Num a => a -> a -> a
add {_} {MkNum f} = f


add 4 5
