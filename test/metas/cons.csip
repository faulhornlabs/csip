# elab

id : {A} -> A -> A
 = \x-> x

Pair : Type -> Type -> Type
  = \A B-> (P : Type) -> (A -> B -> P) -> P

dup : {A} -> A -> Pair A A
  = \a P p-> p a a

Nat : Type
 = (n : Type) -> (n -> n) -> n -> n

zero : Nat
 = \n s z-> z

suc : Nat -> Nat
 = \a n s z-> s (a n s z)

Vec : Type -> Nat -> Type
 = \A n-> (V : Nat -> Type) -> ({n} -> A -> V n -> V (suc n)) -> V zero -> V n

nil : {A} -> Vec A zero
 = \V c n-> n

cons : {A}{n:Nat} -> A -> Vec A n -> Vec A (suc n)
 = \a as V c n-> c a (as V c n)

u = Type

-- TODO: better show
test =
  (cons u (cons u (cons u (cons u (cons u (cons u (cons u (cons u (cons u (cons u
  (cons u (cons u (cons u (cons u (cons u (cons u (cons u (cons u (cons u (cons u
   nil
  )))))))))) ))))))))))

test
